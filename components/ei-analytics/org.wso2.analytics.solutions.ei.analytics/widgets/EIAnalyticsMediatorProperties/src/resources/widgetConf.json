{
  "name": "EI Analytics Mediator Properties",
  "id": "EIAnalyticsMediatorProperties",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": [
        "subscriber"
      ]
    },
    "providerConfig": {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@store(type = 'rdbms', datasource = 'EI_ANALYTICS', field.length='contextPropertyMap:5000,beforePayload:5000,afterPayload:5000,transportPropertyMap:5000' ) @Index('metaTenantId','messageFlowId','host','hashCode','componentName','componentType','componentIndex','componentId','startTime','endTime','entryPoint','entryPointHashcode','faultCount') define table ESBEventTable (metaTenantId int, messageFlowId string, host string, hashCode string, componentName string, componentType string, componentIndex int, componentId string, startTime long, endTime long, duration long, beforePayload string, afterPayload string, contextPropertyMap string, transportPropertyMap string, children string, entryPoint string, entryPointHashcode string, faultCount int, eventTimestamp long);",
          "queryData": {
            "query": "",
            "GET_MESSAGE_FLOW_DATA_QUERY": "from ESBEventTable on messageFlowId=='{{messageFlowId}}' AND componentId=='{{componentId}}' select children, beforePayload, afterPayload, transportPropertyMap, contextPropertyMap limit 1",
            "GET_CHILD_MESSAGE_FLOW_DATA_QUERY": "from ESBEventTable on messageFlowId=='{{messageFlowId}}' AND componentIndex=='{{componentIndex}}' select transportPropertyMap, contextPropertyMap limit 1"
          },
          "publishingInterval": 60
        }
      }
    },
    "options": [
      {
        "id": "headerTitle",
        "title": "Widget Display Name",
        "type": {
          "name": "TEXT",
          "possibleValues": []
        },
        "defaultValue": "EI Analytics Mediator Properties"
      }
    ]
  }
}