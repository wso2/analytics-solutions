{
  "name": "EI Analytics Stats Chart",
  "id": "EIAnalyticsStatsChart",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": [
        "subscriber"
      ]
    },
    "providerConfig": {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "define stream PreProcessedESBStatStream (componentId string, componentName string, componentType string, duration long, faultCount int, startTime long, entryPoint string, metaTenantId int);@store(type = 'rdbms', datasource = 'EI_ANALYTICS') @info(name = 'ESBStatAgg') define aggregation ESBStatAgg from PreProcessedESBStatStream  select componentId, componentName, componentType, sum(duration) as totalDuration, avg(duration) as avgDuration, min(duration) as minDuration, max(duration) as maxDuration, count() as noOfInvocation, sum(faultCount) as faultCount, entryPoint, metaTenantId, startTime as eventTimestamp group by metaTenantId, componentId, componentName, componentType, entryPoint aggregate by startTime every sec...years; define stream PreProcessedMediatorStatStream (metaTenantId int, entryPoint string, entryPointHashcode string, componentId string, hashCode string, componentName string, componentType string, duration long, faultCount int, startTime long); @store(type = 'rdbms', datasource = 'EI_ANALYTICS') @info(name = 'MediatorStatAgg') define aggregation MediatorStatAgg from PreProcessedMediatorStatStream  select metaTenantId, entryPoint, entryPointHashcode, componentId, hashCode, componentName, componentType, sum(duration) as totalDuration, avg(duration) as avgDuration, min(duration) as minDuration, max(duration) as maxDuration, count() as noOfInvocation, sum(faultCount) as faultCount, startTime group by metaTenantId, componentId, componentName, componentType, entryPoint, entryPointHashcode, hashCode aggregate by startTime every sec...years;",
          "queryData": {
            "query": "",
            "nullEntryPointStatPerQuery": "from {{aggregator}} on {{componentIdentifier}}=={{componentName}} AND metaTenantId=={{tenantId}} within {{timeFrom}}L, {{timeTo}}L per {{timeUnit}} select sum(noOfInvocation) as noOfInvocationSum, sum(faultCount) as faultCountSum, AGG_TIMESTAMP as _timestamp",
            "notNullEntryPointStatPerQuery": "from {{aggregator}} on {{componentIdentifier}}=={{componentName}} AND metaTenantId=={{tenantId}} AND entryPoint=={{entryPoint}} within {{timeFrom}}L, {{timeTo}}L per {{timeUnit}} select sum(noOfInvocation) as noOfInvocationSum, sum(faultCount) as faultCountSum"
          },
          "publishingInterval": 60
        }
      }
    },
    "options": [
      {
        "id": "headerTitle",
        "title": "Widget Display Name",
        "type": {
          "name": "TEXT",
          "possibleValues": []
        },
        "defaultValue": "EI Analytics Stats Chart"
      }
    ]
  }
}
